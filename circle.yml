version: 2.0

references:

  install_deps: &install_deps
    run:
      name: Install Packages
      command: |
        sudo apt-get update
        sudo apt-get install tk-dev pkg-config python-dev python-tk tree
        sudo apt-get install python-opencv openslide-tools

  install_pips: &install_pips
    run:
      name: Install PyPI dependences
      command: |
        sudo pip install -U backports.functools_lru_cache  # required for matplotlib @py2
        pip install -r requirements.txt --user
        sudo pip install -r ./tests/requirements.txt
        python --version ; pwd ; ls -l
        pip --version ; pip list

  test_coverage: &test_coverage
    run:
      name: Testing and Formating
      command: |
        unset DISPLAY
        mkdir test-reports && mkdir results
        coverage run --source birl -m py.test birl tests bm_dataset bm_experiments bm_ANHIR -v --doctest-modules --junitxml=test-reports/pytest_junit.xml
        coverage report && coverage xml -o test-reports/coverage.xml
        flake8 . --max-line-length=100
        codecov
        rm -rf results

  make_docs: &make_docs
   run:
     name: Make Documentation
     command: |
       sudo apt-get install pandoc
       sudo pip install -r docs/requirements.txt
       # sphinx-apidoc -o ./docs/source ./imsegm **/test_* --force --follow-links
       cd docs; make html

  run_dataset: &run_dataset
    run:
      name: Dataset
      command: |
        mkdir output
        python bm_dataset/rescale_tissue_images.py -i "./data_images/rat-kidney_/scale-5pc/*.jpg" --scales 5 -ext .png --nb_workers 2
        python bm_dataset/rescale_tissue_landmarks.py -a ./data_images -d ./output --nb_selected 0.5 --nb_total 200
        python bm_dataset/generate_regist_pairs.py -i "./data_images/images/artificial_*.jpg" -l "./data_images/landmarks/artificial_*.csv" -csv ./data_images/cover_artificial.csv --mode each2all
        # python bm_experiments/create_real_synth_dataset.py -i ./data_images/images/Rat_Kidney_HE.jpg -l ./data_images/landmarks/Rat_Kidney_HE.csv -o ./data_images/synth_dataset -nb 3 --nb_workers 1
        # python bm_experiments/generate_regist_pairs.py -i "./data_images/synth_dataset/*.jpg" -l "./data_images/synth_dataset/*.csv" -csv ./data_images/cover_synth-dataset.csv --mode each2all

  run_experiment: &run_experiment
    run:
      name: General experiments
      command: |
        mkdir applications && mkdir results && touch configs/sample_config.yaml
        # python bm_experiments/bm_comp_perform.py  -o ./results -n 1 # reach time-out while running in 36 threads
        python birl/bm_template.py -t ./data_images/pairs-imgs-lnds_mix.csv -o ./results --visual --unique -cfg configs/sample_config.yaml
        rm ./data_images/*_/*/*_HE.csv  # remove target landmarks from histol. tissue
        python birl/bm_template.py -t ./data_images/pairs-imgs-lnds_histol.csv -d ./data_images -o ./results --preprocessing matching-rgb gray -cfg configs/sample_config.yaml
        python bm_experiments/evaluate_experiment.py -d ./data_images -e ./results/BmTemplate --visual
        tree ./results/BmTemplate

  run_bUnwarpJ: &run_bUnwarpJ
    run:
      name: Experiment - bUnwarpJ
      command: |
        wget https://downloads.imagej.net/fiji/latest/fiji-linux64.zip -O applications/fiji-linux64.zip --progress=bar:force:noscroll
        unzip -q applications/fiji-linux64.zip -d applications/
        rm applications/fiji-linux64.zip
        rm -rf results && mkdir results
        python bm_experiments/bm_bUnwarpJ.py -t ./data_images/pairs-imgs-lnds_mix.csv -o ./results -Fiji ./applications/Fiji.app/ImageJ-linux64 -cfg ./configs/ImageJ_bUnwarpJ_histol.yaml --preprocessing matching-rgb --visual
        python bm_experiments/bm_bUnwarpJ.py -t ./data_images/pairs-imgs-lnds_histol.csv -d ./data_images -o ./results -Fiji ./applications/Fiji.app/ImageJ-linux64 -cfg ./configs/ImageJ_bUnwarpJ-SIFT_histol.yaml --unique
        tree -L 3 ./results
        rm -rf ./applications/Fiji.app

  run_RVSS: &run_RVSS
    run:
      name: Experiment - RVSS
      command: |
        wget https://downloads.imagej.net/fiji/latest/fiji-linux64.zip -O applications/fiji-linux64.zip --progress=bar:force:noscroll
        unzip -q applications/fiji-linux64.zip -d applications/
        rm applications/fiji-linux64.zip
        rm -rf results && mkdir results
        python bm_experiments/bm_RVSS.py -t ./data_images/pairs-imgs-lnds_mix.csv -o ./results -Fiji ./applications/Fiji.app/ImageJ-linux64 -cfg ./configs/ImageJ_RVSS_histol.yaml --visual
        tree -L 3 ./results
        rm -rf ./applications/Fiji.app


jobs:

  Py2:
    docker:
      - image: circleci/python:2.7
    steps: &steps
      - checkout
      # INSTALLATION
      - *install_deps
      - *install_pips
      # TESTING
      - *test_coverage
      # DOCUMENTATION
      - *make_docs
      # EXPERIMENTS
      - *run_dataset
      - *run_experiment
      - *run_bUnwarpJ
      - *run_RVSS
      # RESULTS
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  Py3:
    docker:
      - image: circleci/python:3.6
    steps: *steps


workflows:
  version: 2
  build:
    jobs:
      - Py2
      - Py3
