version: 2.0

jobs:
  Py2:
      docker:
        - image: circleci/python:2.7
      steps: &steps
          - checkout
          - run:
              name: Install Packages
              command: |
                sudo apt-get update
                sudo apt-get install tk-dev pkg-config python-dev python-tk
                sudo pip install nose coverage pytest pytest-cov
          - run:
              name: Install PyPI dependences
              command: |
                pip install -r requirements.txt --user
                sudo pip install coverage pytest pytest-cov codecov
                python --version ; pip --version ; pwd ; ls

          - run:
              name: Testing
              command: |
                mkdir results && mkdir test-reports
                coverage run --source benchmark -m py.test benchmark bm_experiments -v --doctest-modules --junitxml=test-reports/pytest_junit.xml
                coverage report && coverage xml -o test-reports/coverage.xml
                codecov

          - run:
              name: Experiments
              command: |
                python benchmark/cls_benchmark.py -in data_images/list_pairs_imgs_lnds.csv -out results --unique --visual
                python benchmark/bm_template.py -in data_images/list_pairs_imgs_lnds.csv -out results --unique --visual --an_executable none
                python bm_experiments/generate_registration_pairs.py -imgs "data_images/images/artificial_*.jpg" -lnds "data_images/landmarks/artificial_*.csv" -csv data_images/cover_artificial.csv --mode all-all
    #            python bm_experiments/create_synth_dataset_real_image.py -img data_images/images/Rat_Kidney_HE.jpg -lnd data_images/landmarks/Rat_Kidney_HE.csv -out data_images/synth_dataset -nb 3 --nb_jobs 1
    #            python bm_experiments/generate_registration_pairs.py -imgs "data_images/synth_dataset/*.jpg" -lnds "data_images/synth_dataset/*.csv" -csv data_images/cover_synth-dataset.csv --mode all-all

          - store_test_results:
              path: test-reports
          - store_artifacts:
              path: test-reports

  Py3:
      docker:
        - image: circleci/python:3.6
      steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - Py2
      - Py3