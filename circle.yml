version: 2.0

references:

  install_deps: &install_deps
    run:
      name: Install Packages
      command: |
        sudo apt-get update -qq
        # sudo apt-get install git-lfs
        sudo apt-get install tk-dev pkg-config python-dev python-tk tree
        sudo apt-get install openslide-tools

  install_pips: &install_pips
    run:
      name: Install PyPI dependences
      command: |
        py_ver=$(python -c"import sys; print(sys.version_info.major)")
        if [ $py_ver -eq 2 ]; then
            cp -r require-py27.txt requirements.txt ;
        fi
        pip install -U backports.functools_lru_cache  # required for matplotlib @py2
        pip install "setuptools<46" -U  # v46 crashes openslide-python install
        pip install -r requirements.txt --user
        python --version
        pwd ; ls
        pip --version
        pip list

  test_coverage: &test_coverage
    run:
      name: Testing and coverage
      command: |
        unset DISPLAY
        pip install -r ./tests/requirements.txt
        mkdir test-reports && mkdir results
        coverage run --source birl -m pytest birl tests bm_dataset bm_experiments bm_ANHIR -v --junitxml=test-reports/pytest_junit.xml
        coverage report
        codecov
        rm -rf results

  make_docs: &make_docs
   run:
     name: Make Documentation
     command: |
       # sudo apt-get install pandoc
       pyenv global 3.7.3
       python --version
       pip install -r docs/requirements.txt
       # sphinx-apidoc -o ./docs/source ./imsegm **/test_* --force --follow-links
       cd docs
       make html --debug --jobs 2 SPHINXOPTS="-W"
       make latexpdf


jobs:

  Py3-Tests:
    docker:
      - image: circleci/python:3.6
    steps: &steps_tests
      - checkout
      # INSTALLATION
      - *install_deps
      #- run: git lfs pull
      - *install_pips
      # TESTING
      - *test_coverage

      # PASSING
      - run:
          name: Finalise
          command: |
            python setup.py install --dry-run --user
            coverage report && coverage xml -o test-reports/coverage.xml
      # RESULTS
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  Py2-Tests:
    docker:
      - image: circleci/python:2.7
    steps: *steps_tests

  Build-Docs:
    docker:
      - image: readthedocs/build:latest
    steps:
      - checkout
      # INSTALLATION
      - *install_pips
      # DOCUMENTATION
      - *make_docs
      # PREVIEW
      - store_artifacts:
          # allows us to preview the generated html pages
          path: docs/build/html/
          destination: html

workflows:
  version: 2
  build:
    jobs:
      - Py2-Tests
      - Py3-Tests
      #- Build-Docs
